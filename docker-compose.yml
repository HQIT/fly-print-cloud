services:
  postgres:
    image: dockerpull.pw/library/postgres:15
    container_name: fly-print-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fly-print-network

  redis:
    image: dockerpull.pw/library/redis:7-alpine
    container_name: fly-print-redis
    volumes:
      - redis_data:/data
    networks:
      - fly-print-network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        - GOPROXY=https://goproxy.cn,direct
    container_name: fly-print-api
    environment:
      - FLY_PRINT_DATABASE_HOST=postgres
      - FLY_PRINT_DATABASE_PORT=5432
      - FLY_PRINT_DATABASE_DBNAME=${POSTGRES_DB}
      - FLY_PRINT_DATABASE_USER=${POSTGRES_USER}
      - FLY_PRINT_DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - FLY_PRINT_REDIS_HOST=redis
      - FLY_PRINT_REDIS_PORT=6379
      - CREATE_DEFAULT_ADMIN=${CREATE_DEFAULT_ADMIN:-false}
      - DEFAULT_ADMIN_PASSWORD=${DEFAULT_ADMIN_PASSWORD}
    depends_on:
      - postgres
      - redis
    networks:
      - fly-print-network

  admin-console-builder:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: fly-print-admin-builder
    volumes:
      - admin_build:/app/build
    restart: "no"
    networks:
      - fly-print-network

  nginx:
    image: dockerpull.pw/library/nginx:alpine
    container_name: fly-print-nginx
    ports:
      - "${ADMIN_PORT}:80"
      - "${API_PORT}:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - admin_build:/usr/share/nginx/html
    depends_on:
      - api
    networks:
      - fly-print-network

volumes:
  postgres_data:
  redis_data:
  admin_build:

networks:
  fly-print-network:
    driver: bridge
