server {
    listen 8000;
    server_name localhost;

    # API 路由 - 代理到后端
    location /api/ {
        proxy_pass http://api:8080/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # 确保 cookies 正确传递
        proxy_set_header Cookie $http_cookie;
    }

    # OAuth2 认证路由 - 代理到后端
    location /auth/ {
        proxy_pass http://api:8080/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # 确保 cookies 正确传递
        proxy_set_header Cookie $http_cookie;
    }

    # WebSocket 支持 - 匹配实际的 WebSocket 路径
    location /api/v1/edge/ws {
        proxy_pass http://api:8080/api/v1/edge/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }

    # Admin Console - 静态文件 (最后匹配)
    location / {
        # 检查认证状态
        auth_request /auth/verify;
        error_page 401 = @login_redirect;
        
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }
    
    # 认证验证端点 (内部使用)
    location = /auth/verify {
        internal;
        proxy_pass http://api:8080/auth/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header Cookie $http_cookie;
    }
    
    # 未认证时重定向到登录页面
    location @login_redirect {
        return 302 /auth/login;
    }
}
